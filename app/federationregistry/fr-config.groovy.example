import org.apache.log4j.DailyRollingFileAppender

appName=federationregistry
grails.serverURL = "https://example.com/federationregistry"

// Federation Registry internal configuration
aaf {
  fr {
    deployment.environment = "development"
    bootstrap = false
    enabledemonstration = true

    metadata {
      federation = "urn:mace:federation:name"
      current {
        validForDays = 7
      }
      all {
        validForDays = 7
      }
    }
    
    certificates {
      // shib default of 20 years for assertion certs so this must be large
      maxlifeindays = 7800
    }
    
    shibboleth {
      federationprovider {
        spactive = false
        enabled = true
        autoprovision = true
        ssoendpoint = "/Shibboleth.sso/DS"
      }

      headers {
        entityID = "Shib-Identity-Provider"
        uniqueID = "persistent-id"
        email= "mail"
        commonName = "cn"
        sharedToken = "auEduPersonSharedToken"
      }
    }
    
    knownimplementations {
      identityproviders {
        shib22 {
          displayName = 'Shibboleth Identity Provider (2.2.x)'
          selected = false
          entitydescriptor = '$host/idp/shibboleth'
          post.uri = '$host/idp/profile/SAML2/POST/SSO'
          redirect.uri = '$host/idp/profile/SAML2/Redirect/SSO'
          artifact {
            uri = '$host:8443/idp/profile/SAML2/SOAP/ArtifactResolution'
            index = 2
          }
          attributeservice.uri = '$host:8443/idp/profile/SAML2/SOAP/AttributeQuery'
        }
        shib23 {
          displayName = 'Shibboleth Identity Provider (2.3.x)'
          selected = true
          entitydescriptor = '$host/idp/shibboleth'
          post.uri = '$host/idp/profile/SAML2/POST/SSO'
          redirect.uri = '$host/idp/profile/SAML2/Redirect/SSO'
          artifact {
            uri = '$host:8443/idp/profile/SAML2/SOAP/ArtifactResolution'
            index = 2
          }
          attributeservice.uri = '$host:8443/idp/profile/SAML2/SOAP/AttributeQuery'
        }
      }
      serviceproviders {
        shib23 {
          displayName = "Shibboleth Service Provider (2.3.x)"
          selected = true
          entitydescriptor = '$host/shibboleth'
          acs {
            post {
              uri = '$host/Shibboleth.sso/SAML2/POST'
              index = 1
            }
            artifact {
              uri = '$host/Shibboleth.sso/SAML2/Artifact'
              index = 3
            }
          }
          drs {
            uri = '$host/Shibboleth.sso/DS'
            index = 1
          }
          slo {
            artifact.uri = '$host/Shibboleth.sso/SLO/Artifact'
            slo.redirect.uri = '$host/Shibboleth.sso/SLO/Redirect'
            soap.uri = '$host/Shibboleth.sso/SLO/SOAP' 
            post.uri = '$host/Shibboleth.sso/SLO/POST'
          }
          mnid {
            artifact.uri = '$host/Shibboleth.sso/NIM/Artifact'
            redirect.uri = '$host/Shibboleth.sso/NIM/Redirect' 
            soap.uri = '$host/Shibboleth.sso/NIM/SOAP'
            post.uri = '$host/Shibboleth.sso/NIM/POST'
          }
        }
        shib24 {
          displayName = "Shibboleth Service Provider (2.4.x)"
          selected = false
          entitydescriptor = '$host/shibboleth'
          acs {
            post {
              uri = '$host/Shibboleth.sso/SAML2/POST'
              index = 1
            }
            artifact {
              uri = '$host/Shibboleth.sso/SAML2/Artifact'
              index = 3
            }
          }
          drs {
            uri = '$host/Shibboleth.sso/Login'
            index = 1
          }
          slo {
            artifact.uri = '$host/Shibboleth.sso/SLO/Artifact'
            slo.redirect.uri = '$host/Shibboleth.sso/SLO/Redirect'
            soap.uri = '$host/Shibboleth.sso/SLO/SOAP' 
            post.uri = '$host/Shibboleth.sso/SLO/POST'
          }
          mnid {
            artifact.uri = '$host/Shibboleth.sso/NIM/Artifact'
            redirect.uri = '$host/Shibboleth.sso/NIM/Redirect' 
            soap.uri = '$host/Shibboleth.sso/NIM/SOAP'
            post.uri = '$host/Shibboleth.sso/NIM/POST'
          }
        }
      }
    }
  }
}

//Data repository
/** - USE FOR DEVELOPMENT - NON JNDI
dataSource {
  pooled = true
  driverClassName = "com.mysql.jdbc.Driver"
  dialect = org.hibernate.dialect.MySQL5InnoDBDialect
  dbCreate = "update"
  loggingSql = false
  
  url = "jdbc:mysql://localhost/federationregistry"
  username = "fr"
  password = "password"
}
**/

/** - USE FOR PRODUCTION - JNDI Datasource
dataSource {
  dbCreate = "update"
  dialect= org.hibernate.dialect.MySQL5InnoDBDialect
  jndiName= "java:comp/env/jdbc/FEDERATIONREGISTRY" 
}
**/

// Shiro internal configuration
security.shiro.authc.required = false

// Logging configuration
log4j = {
  appenders {
    appender new DailyRollingFileAppender(name:"fr-app", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/fr-app.log", datePattern:"'.'yyyy-MM-dd")
    appender new DailyRollingFileAppender(name:"fr-md", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/fr-md.log", datePattern:"'.'yyyy-MM-dd")
    appender new DailyRollingFileAppender(name:"stacktrace", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/stacktrace.log", datePattern:"'.'yyyy-MM-dd")
  }

  root {
    info 'stdout'
    additivity = true
  }
  
  debug 'fr-md': ['grails.app.controller.aaf.fr.metadata.MetadataController',
                  'grails.app.service.aaf.fr.metadata.MetadataGenerationService'], additivity: false
          
  warn  'fr-app':['org.codehaus.groovy.grails.web.servlet',
                  'org.codehaus.groovy.grails.web.pages',
                  'org.codehaus.groovy.grails.web.sitemesh',
                  'org.codehaus.groovy.grails.web.mapping.filter',
                  'org.codehaus.groovy.grails.web.mapping',
                  'org.codehaus.groovy.grails.commons',
                  'org.codehaus.groovy.grails.plugins',                       
                  'org.apache.shiro']

  debug 'fr-app':['grails.app.controller',
                  'grails.app.domain',
                  'grails.app.service',
                  'grails.app.realm',
                  'aaf.fr']
}