import org.apache.log4j.DailyRollingFileAppender

appName=federationregistry
grails.serverURL = "https://example.edu.au/federationregistry"
grails.mail.default.from="fr-noreply@example.edu.au"

// Environment configuration
environments {
  production {
    greenmail.disabled = true
    testDataConfig.enabled = false

    /* 
    Example when using gmail, configure to suit your own environment
    Per: http://grails.org/plugin/mail

    grails {
      mail {
          host = 'smtp.gmail.com'
          port = 465
          username = '...@gmail.com'
          password = '...'
          props = [
              'mail.smtp.auth': 'true',
              'mail.smtp.socketFactory.port': '465',
              'mail.smtp.socketFactory.class': 'javax.net.ssl.SSLSocketFactory',
              'mail.smtp.socketFactory.fallback': 'false'
          ]
      }
    */
  }
  test {
    testDataConfig.enabled = true
    grails.mail.port = com.icegreen.greenmail.util.ServerSetupTest.SMTP.port
  }
  development {
    grails {
      resources.debug = true  
      gsp.enable.reload = true
      mail {
        port = com.icegreen.greenmail.util.ServerSetupTest.SMTP.port
      }
    }

    testDataConfig.enabled = false
  }
} 

// Federated Identity Configuration
federation {
  environment = "test"  // test | production
  enabled = true
  automatelogin = true
  federationactive = true
  developmentactive = false
  autoprovision = true
  
  // Supported as fallback for problematic webservers but should usually be true
  // See https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPAttributeAccess for more
  request.attributes = false 
  ssoendpoint = "/Shibboleth.sso/Login"
  
  // The subject class being utilized by the host application
  app.subject = "aaf.fr.identity.Subject"
  
  mapping {
    principal = "persistent-id"   // The unique and persistent ID used to identify this principal for current and subsequent sessions (eduPersonTargetedID)
    credential = "Shib-Session-ID"  // The internal session key assigned to the session associated with the request and hence the credential used
    entityID = "Shib-Identity-Provider" // The entityID of the IdP that authenticated the subject associated with the request.
    
    applicationID = "Shib-Application-ID" // The applicationId property derived for the request.     
    idpAuthenticationInstant = "Shib-Authentication-Instant" // The ISO timestamp provided by the IdP indicating the time of authentication. 
    
    cn = "cn"
    email= "mail"
    sharedToken = "auEduPersonSharedToken"
  }
}

// Federation Registry Internal Configuration
aaf {
  fr {
    bootstrap = false

    metadata {
      federation = "aaf.edu.au"
      current {
        validForDays = 7
      }
      all {
        validForDays = 7
      }
    }
    
    certificates {
      // shib default of 20 years for assertion certs so this must be large
      maxlifeindays = 7800
    }
    
    knownimplementations {
      identityproviders {
        shib22 {
          displayName = 'Shibboleth Identity Provider (2.2.x)'
          selected = false
          entitydescriptor = '$host/idp/shibboleth'
          post.uri = '$host/idp/profile/SAML2/POST/SSO'
          redirect.uri = '$host/idp/profile/SAML2/Redirect/SSO'
          artifact {
            uri = '$host:8443/idp/profile/SAML2/SOAP/ArtifactResolution'
            index = 2
          }
          attributeservice.uri = '$host:8443/idp/profile/SAML2/SOAP/AttributeQuery'
        }
        shib23 {
          displayName = 'Shibboleth Identity Provider (2.3.x, 2.4.x)'
          selected = true
          entitydescriptor = '$host/idp/shibboleth'
          post.uri = '$host/idp/profile/SAML2/POST/SSO'
          redirect.uri = '$host/idp/profile/SAML2/Redirect/SSO'
          artifact {
            uri = '$host:8443/idp/profile/SAML2/SOAP/ArtifactResolution'
            index = 2
          }
          attributeservice.uri = '$host:8443/idp/profile/SAML2/SOAP/AttributeQuery'
        }
      }
      serviceproviders {
        shib23 {
          displayName = "Shibboleth Service Provider (2.3.x)"
          selected = true
          entitydescriptor = '$host/shibboleth'
          acs {
            post {
              uri = '$host/Shibboleth.sso/SAML2/POST'
              index = 1
            }
            artifact {
              uri = '$host/Shibboleth.sso/SAML2/Artifact'
              index = 3
            }
          }
          drs {
            uri = '$host/Shibboleth.sso/DS'
            index = 1
          }
          slo {
            artifact.uri = '$host/Shibboleth.sso/SLO/Artifact'
            redirect.uri = '$host/Shibboleth.sso/SLO/Redirect'
            soap.uri = '$host/Shibboleth.sso/SLO/SOAP' 
            post.uri = '$host/Shibboleth.sso/SLO/POST'
          }
          mnid {
            artifact.uri = '$host/Shibboleth.sso/NIM/Artifact'
            redirect.uri = '$host/Shibboleth.sso/NIM/Redirect' 
            soap.uri = '$host/Shibboleth.sso/NIM/SOAP'
            post.uri = '$host/Shibboleth.sso/NIM/POST'
          }
        }
        shib24 {
          displayName = "Shibboleth Service Provider (2.4.x, 2.5.x)"
          selected = false
          entitydescriptor = '$host/shibboleth'
          acs {
            post {
              uri = '$host/Shibboleth.sso/SAML2/POST'
              index = 1
            }
            artifact {
              uri = '$host/Shibboleth.sso/SAML2/Artifact'
              index = 3
            }
          }
          drs {
            uri = '$host/Shibboleth.sso/Login'
            index = 1
          }
          slo {
            artifact.uri = '$host/Shibboleth.sso/SLO/Artifact'
            redirect.uri = '$host/Shibboleth.sso/SLO/Redirect'
            soap.uri = '$host/Shibboleth.sso/SLO/SOAP' 
            post.uri = '$host/Shibboleth.sso/SLO/POST'
          }
          mnid {
            artifact.uri = '$host/Shibboleth.sso/NIM/Artifact'
            redirect.uri = '$host/Shibboleth.sso/NIM/Redirect' 
            soap.uri = '$host/Shibboleth.sso/NIM/SOAP'
            post.uri = '$host/Shibboleth.sso/NIM/POST'
          }
        }
        simplesamlphp {
          displayName = "SimpleSAMLphp"
          selected = false
          entitydescriptor = '$host/simplesaml/module.php/saml/sp/metadata.php/default-sp'
          acs {
            post {
              uri = '$host/simplesaml/module.php/saml/sp/saml2-acs.php/default-sp'
              index = 0
            }
            artifact {
              uri = '$host/simplesaml/module.php/saml/sp/saml2-acs.php/default-sp'
              index = 2
            }
          }
          drs {
            uri = '$host/simplesaml/module.php/saml/sp/discoresp.php'
            index = 1
          }
          slo {
            redirect.uri = '$host/simplesaml/module.php/saml/sp/saml2-logout.php/default-sp'
            soap.uri = '$host/simplesaml/module.php/saml/sp/saml2-logout.php/default-sp' 
          }
        }
      }
    }
  }
}

//Data repository
/** - USE FOR DEVELOPMENT - NON JNDI
dataSource {
  pooled = true
  driverClassName = "com.mysql.jdbc.Driver"
  dialect = org.hibernate.dialect.MySQL5InnoDBDialect
  dbCreate = "update"
  loggingSql = false
  
  url = "jdbc:mysql://localhost/federationregistry2?useUnicode=yes&characterEncoding=UTF-8"
  username = "fr"
  password = "password"
}
**/

/** - USE FOR PRODUCTION - JNDI Datasource
dataSource {
  dbCreate = "update"
  dialect= org.hibernate.dialect.MySQL5InnoDBDialect
  jndiName= "java:comp/env/jdbc/FEDERATIONREGISTRY2" 
}
**/

// Shiro internal configuration
security.shiro.authc.required = false

// Logging configuration
log4j = {
  appenders {
    appender new DailyRollingFileAppender(name:"fr-metadata", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/fr-metadata.log", datePattern:"'.'yyyy-MM-dd")
    appender new DailyRollingFileAppender(name:"fr-security", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/fr-security.log", datePattern:"'.'yyyy-MM-dd")
    appender new DailyRollingFileAppender(name:"fr-app", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/fr-app.log", datePattern:"'.'yyyy-MM-dd")
    appender new DailyRollingFileAppender(name:"fr-grails", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/fr-grails.log", datePattern:"'.'yyyy-MM-dd")
    appender new DailyRollingFileAppender(name:"stacktrace", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/fr-stacktrace.log", datePattern:"'.'yyyy-MM-dd")
  }

  root {
    info 'stdout'
    additivity = true
  }

  info  'fr-metadata' :['grails.app.services.aaf.fr.metadata',
                        'grails.app.controllers.aaf.fr.metadata'], additivity: false

  info  'fr-security' :['grails.app.filters'], additivity: false

  info  'fr-app'      :['grails.app.controllers',
                        'grails.app.domains',
                        'grails.app.services',
                        'grails.app.realms',
                        'aaf.fr',                       
                        'org.apache.shiro'], additivity: false
          
  warn  'fr-grails'   :['org.codehaus.groovy.grails.web.servlet',
                        'org.codehaus.groovy.grails.web.pages',
                        'org.codehaus.groovy.grails.web.sitemesh',
                        'org.codehaus.groovy.grails.web.mapping.filter',
                        'org.codehaus.groovy.grails.web.mapping',
                        'org.codehaus.groovy.grails.commons',
                        'org.codehaus.groovy.grails.plugins'], additivity: false
}
