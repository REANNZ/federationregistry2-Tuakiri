
def frSetup = new StringBuffer()

frSetup.append("import org.apache.shiro.subject.Subject\n")
frSetup.append("import org.apache.shiro.util.ThreadContext\n")
frSetup.append("import org.apache.shiro.SecurityUtils\n")
frSetup.append("import grails.plugins.federatedgrails.*\n")
frSetup.append("import aaf.fr.app.*\n")
frSetup.append("import aaf.fr.workflow.*\n")
frSetup.append("import aaf.fr.foundation.*\n")
frSetup.append("import aaf.fr.identity.*\n")

frSetup.append("\n// Federation Registry Initial Bootstrap - Autogenerated at ${new Date()}\n\n")

def createFRBase = new File('src/createFRBase.groovy')
frSetup.append(createFRBase.getText() + "\n\n")

frSetup.append("def internalUser = aaf.fr.identity.Subject.findByPrincipal('internaladministrator')\n\n")

def createSAMLBase = new File('src/createSAMLBase.groovy')
frSetup.append(createSAMLBase.getText() + "\n\n")

frSetup.append("// Workflow scripts\n")
def scripts = new File("./src/workflow/scripts")
def sc = 0
scripts.eachFile { script ->
    def name = script.name =~ /(.+?)(\.[^.]*$|$)/
    
    sc++
    frSetup.append( "def script$sc = \"${script.getText().bytes.encodeBase64().toString()}\"\n")
    frSetup.append( "def wfs$sc = new WorkflowScript(name: \"${name[0][1]}\", definition: new String(script${sc}.decodeBase64()), creator:internalUser)")
    frSetup.append( """
if(!wfs${sc}.save()) {
    println \"Unable to correctly process workflow script wfs$sc during bootstrap\"
    wfs${sc}.errors.each {
        println it
    }
    throw new RuntimeException("Unable to import wfs$sc")
}
else {
    println \"Loaded valid workflow script wfs$sc\"
}
\n""")
}

frSetup.append("// Workflow processes\n")
frSetup.append("workflowProcessService = ctx.getBean('workflowProcessService')\n\n")

frSetup.append("def suMetaClass = new ExpandoMetaClass(SecurityUtils)\n")
frSetup.append("suMetaClass.'static'.getSubject = {[getPrincipal:{internalUser.id}] as Subject}\n")
frSetup.append("suMetaClass.initialize()\n")
frSetup.append("SecurityUtils.metaClass = suMetaClass\n\n")

// Create workflow processes
def processes = new File("./src/workflow/processes")
def proc = 0
processes.eachFile { process ->
    proc++
    frSetup.append( "def process$proc = \"${process.getText().bytes.encodeBase64().toString()}\"\n")
    frSetup.append( "workflowProcessService.create(new String(process${proc}.decodeBase64()))\n\n")
}

frSetup.append("SecurityUtils.metaClass = null")

frSetup.append("// Next step\n")
frSetup.append("println 'If this script has executed successfully you should progress to executing aafAttributePopulation.groovy or the equivalent for your federation'")

def out = new File('frFullSetup.groovy')
out.write(frSetup.toString())