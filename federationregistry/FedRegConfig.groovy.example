import org.apache.log4j.DailyRollingFileAppender

appName=federationregistry

// Federation Registry data repository
dataSource {
	pooled = true
	driverClassName = "com.mysql.jdbc.Driver"
	username = "fr"
	password =  "password"
	dialect= org.hibernate.dialect.MySQLInnoDBDialect
	
	url = "jdbc:mysql://localhost/federationregistry"
}

// Logging state
log4j = {
	appenders {
		appender new DailyRollingFileAppender(name:"fedreglogger", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} [%t] %-5p %c %x - %m%n"), 
		file:"/tmp/federationregistry.log", datePattern:"'.'yyyy-MM-dd")
	}
	
    error 	fedreglogger: 	'org.codehaus.groovy.grails.web.servlet',
          					'org.codehaus.groovy.grails.web.pages',
          					'org.codehaus.groovy.grails.web.sitemesh',
          					'org.codehaus.groovy.grails.web.mapping.filter',
          					'org.codehaus.groovy.grails.web.mapping',
          					'org.codehaus.groovy.grails.commons',
       						'org.codehaus.groovy.grails.plugins',
							'org.apache.shiro'

	info	fedreglogger: 	'grails.app'

    debug 	fedreglogger: 	'grails.plugins.nimble',
							'grails.app.controller',
							'grails.app.domain',
							'grails.app.service'
}

// Federation Registry specific configuration
fedreg {
	oldrr {
		connection = "jdbc:mysql://localhost:3306/resourceregistry"
		user = "rr"
		password = "password"
		driver = "com.mysql.jdbc.Driver"
	}
	
	shibboleth {
		name = "fedreg.template.federation.shibboleth.name"
	    displayname = "fedreg.template.federation.shibboleth.displayname"
	    description = "fedreg.template.federation.shibboleth.description"
	    alttext = "fedreg.template.federation.shibboleth.alttext"
        url = "http://www.federation.org"

        federationprovider {
			spactive = false
            enabled = true
            autoprovision = true
			ssoendpoint = "/Shibboleth.sso/DS"
        }

		headers {
			homeOrganization = "homeOrganization"
			homeOrganizationType = "homeOrganizationType"
			entityID = "Shib-Identity-Provider"
			uniqueID = "persistent-id"
			givenName= "givenName"
			surname= "sn"
			email= "mail"
		}
    }
}

// Shiro integration
security.shiro.authc.required = false

// set per-environment serverURL stem for creating absolute links
environments {
    production {
        grails.serverURL = "https://example.com/${appName}"
		testDataConfig {
        	enabled = false
      	}
    }
}